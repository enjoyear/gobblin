/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
  repositories {
    jcenter()
  }
  dependencies {
    classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.3'
  }
}

import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar

apply plugin: 'java'

configurations {
  google
}

configurations.compile.extendsFrom(configurations.google)

dependencies {
  compile project(":gobblin-core")

  google(externalDependency.googleAdWordsAxis) {
    transitive = false
  }
  google(externalDependency.googleAdWordsLib) {
    transitive = false
  }
  google('com.google.guava:guava:20.0') {
    transitive = false
  }
  google('com.google.api-ads:ads-lib-axis:2.21.0') {
    transitive = false
  }

  compile externalDependency.googleAnalytics
  compile externalDependency.googleApiClient
  compile externalDependency.googleDrive
  compile externalDependency.googleHttpClient
  compile externalDependency.googleHttpClientGson
  compile externalDependency.googleOauthClient
  compile externalDependency.googleWebmasters
  compile externalDependency.commonsLang3
  compile externalDependency.opencsv
  compile externalDependency.gson
  compile externalDependency.slf4j
  compile externalDependency.junit

  compile externalDependency.googleAdWordsAxis
  compile externalDependency.googleAdWordsLib
  compile 'com.google.guava:guava:20.0'

  testCompile externalDependency.mockito
  testCompile externalDependency.testng
}

def shadowTask = task("guava-shade", type: ShadowJar) {
  zip64 true
  configurations = [project.configurations.google]
  relocate('com.google', 'gobblin.ingestion.google.shaded.com.google')
  from sourceSets.main.output
}

build.dependsOn(tasks['guava-shade'])
//build.dependsOn.remove("jar")

artifacts {
  compile shadowTask
}